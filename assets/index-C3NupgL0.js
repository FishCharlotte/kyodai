import{r as I,g as v}from"./phaser-BOgQtUoh.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();var b=I();const A=v(b),P={type:Phaser.AUTO,width:800,height:600,parent:"game",physics:{default:"arcade",arcade:{gravity:{y:300},debug:!1}}},d={BOOT:"BootScene",LOADING:"LoadingScene",MENU:"MenuScene",GAME:"GameScene"},o={TILE_TYPES:51,TILE_WIDTH:35,TILE_HEIGHT:35,TILE_SCALE:1.2,BACKGROUND_COLOR:3558256,GAME_TITLE:"连连看 Kyodai"};class H extends Phaser.Scene{constructor(){super({key:d.BOOT})}create(){this.scene.start(d.LOADING)}}class D extends Phaser.Scene{constructor(){super({key:d.LOADING})}preload(){this.createLoadingBar(),this.load.image("block","/assets/block/block.png"),this.load.image("select","/assets/block/select.png");for(let e=1;e<=o.TILE_TYPES;e++)this.load.image(`tile${e}`,`/assets/block/icon/${e}.png`)}create(){this.scene.start(d.MENU)}createLoadingBar(){const e=this.cameras.main.width,t=this.cameras.main.height,s=this.add.graphics(),i=this.add.graphics();i.fillStyle(2236962,.8),i.fillRect(e/4,t/2-30,e/2,50),this.load.on("progress",r=>{s.clear(),s.fillStyle(16777215,1),s.fillRect(e/4+10,t/2-20,(e/2-20)*r,30)})}}class k extends Phaser.GameObjects.Container{constructor(e,t,s,i){super(e,t,s),this.blockSprite=e.add.sprite(0,0,"block"),this.blockSprite.setScale(o.TILE_SCALE),this.iconSprite=e.add.sprite(2,-2,`tile${i+1}`),this.iconSprite.setScale(o.TILE_SCALE),this.selectSprite=e.add.sprite(2,-2,"select"),this.selectSprite.setScale(o.TILE_SCALE),this.selectSprite.setVisible(!1),this.add([this.blockSprite,this.iconSprite,this.selectSprite]),this.gridX=0,this.gridY=0,this.value=i,this.selected=!1,this.setSize(o.TILE_WIDTH*o.TILE_SCALE,o.TILE_HEIGHT*o.TILE_SCALE),this.setInteractive(),this.on("pointerdown",this.onTileClick.bind(this)),this.on("pointerover",()=>{!this.selected&&this.visible&&this.iconSprite.setTint(14540253)}),this.on("pointerout",()=>{!this.selected&&this.visible&&this.iconSprite.clearTint()})}onTileClick(){this.visible&&this.scene.handleTileClick(this)}setGridPosition(e,t){this.gridX=e,this.gridY=t}setSelected(e){this.selected=e,this.selectSprite.setVisible(e),this.visible&&(e?this.iconSprite.setTint(65280):this.iconSprite.clearTint())}setVisible(e){return super.setVisible(e),this.blockSprite.setVisible(e),this.iconSprite.setVisible(e),e?this.selectSprite.setVisible(this.selected):this.selectSprite.setVisible(!1),this}}class O{constructor(e){this.tiles=e,this.width=e[0].length,this.height=e.length}findPath(e,t,s,i){if(console.log("findPath",this.tiles),!this.isValidPos(e,t)||!this.isValidPos(s,i))return{success:!1,path:[]};if(this.checkDirectLine(e,t,s,i))return{success:!0,path:[{x:e,y:t},{x:s,y:i}]};const r=this.checkOneCorner(e,t,s,i);if(r.success)return r;const n=this.checkTwoCorners(e,t,s,i);return n.success?n:{success:!1,path:[]}}checkDirectLine(e,t,s,i){if(e===s){const r=Math.min(t,i),n=Math.max(t,i);for(let l=r+1;l<n;l++)if(this.getTileAt(e,l)!==null)return!1;return!0}else if(t===i){const r=Math.min(e,s),n=Math.max(e,s);for(let l=r+1;l<n;l++)if(this.getTileAt(l,t)!==null)return!1;return!0}return!1}isValidPos(e,t){return e>=0&&e<this.width&&t>=0&&t<this.height}getTileAt(e,t){return this.isValidPos(e,t)?this.tiles[t][e]:null}checkOneCorner(e,t,s,i){const r=[{x:e,y:i},{x:s,y:t}];for(const n of r)if(this.getTileAt(n.x,n.y)===null&&this.checkDirectLine(e,t,n.x,n.y)&&this.checkDirectLine(n.x,n.y,s,i))return{success:!0,path:[{x:e,y:t},{x:n.x,y:n.y},{x:s,y:i}]};return{success:!1,path:[]}}checkTwoCorners(e,t,s,i){for(let r=0;r<this.width;r++){const n={x:r,y:t},l={x:r,y:i};if(!(r===e||r===s)&&this.getTileAt(n.x,n.y)===null&&this.getTileAt(l.x,l.y)===null&&this.checkDirectLine(e,t,n.x,n.y)&&this.checkDirectLine(n.x,n.y,l.x,l.y)&&this.checkDirectLine(l.x,l.y,s,i))return{success:!0,path:[{x:e,y:t},{x:n.x,y:n.y},{x:l.x,y:l.y},{x:s,y:i}]}}for(let r=0;r<this.height;r++){const n={x:e,y:r},l={x:s,y:r};if(!(r===t||r===i)&&this.getTileAt(n.x,n.y)===null&&this.getTileAt(l.x,l.y)===null&&this.checkDirectLine(e,t,n.x,n.y)&&this.checkDirectLine(n.x,n.y,l.x,l.y)&&this.checkDirectLine(l.x,l.y,s,i))return{success:!0,path:[{x:e,y:t},{x:n.x,y:n.y},{x:l.x,y:l.y},{x:s,y:i}]}}return{success:!1,path:[]}}isWalkable(e,t){const s=this.scene.getTileAt(e,t);return s===null?!1:s.isWalkable()}}const u={EASY:"easy",MEDIUM:"medium",HARD:"hard"},y={[u.EASY]:[{id:1,gridWidth:6,gridHeight:6,tileCounts:{0:4,1:4,2:4,3:4,4:4},defaultPairCount:2},{id:2,gridWidth:8,gridHeight:6,tileCounts:{0:6,1:6,2:6,3:6},defaultPairCount:2}],[u.MEDIUM]:[{id:1,gridWidth:8,gridHeight:8,tileCounts:{0:8,1:8,2:8,3:8,4:8,5:8},defaultPairCount:2},{id:2,gridWidth:10,gridHeight:8,tileCounts:{0:10,1:10,2:10,3:10},defaultPairCount:2}],[u.HARD]:[{id:1,gridWidth:10,gridHeight:10,tileCounts:{0:10,1:10,2:10,3:10,4:10,5:10,6:10,7:10,8:10,9:10},defaultPairCount:2},{id:2,gridWidth:12,gridHeight:10,tileCounts:{0:12,1:12,2:12,3:12,4:12,5:12,6:12,7:12},defaultPairCount:2}]};class M extends Phaser.Scene{constructor(){super({key:d.GAME}),this.tiles=[],this.tileSprites=[],this.selectedTile=null,this.pathFinder=null,this.currentLevel=null,this.difficulty=null,this.remainingTiles=0}init(e){if(!e||!e.levelConfig){console.error("No level config provided"),this.scene.start(d.MENU);return}this.currentLevel=e.levelId,this.difficulty=e.difficulty,this.levelConfig=e.levelConfig}create(){this.cameras.main.setBackgroundColor(o.BACKGROUND_COLOR),this.add.text(16,16,`难度: ${this.getDifficultyText()} - 关卡: ${this.currentLevel}`,{fontSize:"24px",fill:"#fff"}),this.add.text(750,16,"返回",{fontSize:"24px",fill:"#fff",backgroundColor:"#4a90e2",padding:{x:10,y:5}}).setInteractive({useHandCursor:!0}).on("pointerdown",()=>this.scene.start(d.MENU)),this.createBoard(),console.log(this.tiles),this.pathFinder=new O(this.tiles),this.checkHasSolution()||this.showNoSolutionMessage()}getDifficultyText(){return{[u.EASY]:"简单",[u.MEDIUM]:"中等",[u.HARD]:"困难"}[this.difficulty]}createBoard(){const e=this.levelConfig,t=o.TILE_WIDTH*o.TILE_SCALE,s=o.TILE_HEIGHT*o.TILE_SCALE,i=e.gridWidth+2,r=e.gridHeight+2,n=4,l=i*t-(i-1)*n,m=(this.cameras.main.width-l)/2,E=(this.cameras.main.height-r*s)/2;let g=[];const p=e.gridWidth*e.gridHeight;Object.entries(e.tileCounts).forEach(([c,h])=>{for(let T=0;T<h;T++)g.push(parseInt(c))});const a=p-g.length;if(a>0){const c=new Set(Object.keys(e.tileCounts).map(Number)),h=Array.from({length:o.TILE_TYPES},(f,C)=>C).filter(f=>!c.has(f)),T=a/e.defaultPairCount;for(let f=0;f<T;f++){const C=h[f%h.length];for(let x=0;x<e.defaultPairCount;x++)g.push(C)}}g=Phaser.Utils.Array.Shuffle(g);for(let c=0;c<r;c++){this.tiles[c]=[],this.tileSprites[c]=[];for(let h=i-1;h>=0;h--){if(h===0||h===i-1||c===0||c===r-1){this.tiles[c][h]=null,this.tileSprites[c][h]=null;continue}const T=(c-1)*e.gridWidth+(h-1),f=g[T],C=m+h*t-h*n+t/2,x=E+c*s+s/2;this.tiles[c][h]=f;const L=new k(this,C,x,f);L.setGridPosition(h,c),this.add.existing(L),this.tileSprites[c][h]=L}}this.remainingTiles=e.gridWidth*e.gridHeight}handleTileClick(e){const{gridX:t,gridY:s}=e;this.tiles[s][t]!==null&&(this.selectedTile?this.selectedTile===e?(e.setSelected(!1),this.selectedTile=null):this.canConnect(this.selectedTile,e)?this.matchTiles(this.selectedTile,e):(this.selectedTile.setSelected(!1),this.selectedTile=e,e.setSelected(!0)):(this.selectedTile=e,e.setSelected(!0)))}canConnect(e,t){const s=this.tiles[e.gridY][e.gridX],i=this.tiles[t.gridY][t.gridX];if(s!==i||e===t)return!1;const r=this.pathFinder.findPath(e.gridX,e.gridY,t.gridX,t.gridY);return r.success?(this.showConnectingPath(r.path),!0):!1}showConnectingPath(e){const t=this.add.graphics();if(t.lineStyle(2,65280),e.length>0){const s=this.levelConfig,i=o.TILE_WIDTH*o.TILE_SCALE,r=o.TILE_HEIGHT*o.TILE_SCALE,n=4,l=s.gridWidth+2,m=s.gridHeight+2,E=(this.cameras.main.width-(l*i-(l-1)*n))/2,g=(this.cameras.main.height-m*r)/2;t.beginPath();const p=e.map(a=>({x:E+a.x*i-a.x*n+i/2,y:g+a.y*r+r/2}));t.moveTo(p[0].x,p[0].y);for(let a=1;a<p.length;a++)t.lineTo(p[a].x,p[a].y);t.strokePath(),p.forEach(a=>{t.fillStyle(65280,1),t.fillCircle(a.x,a.y,3)}),this.time.delayedCall(300,()=>{t.destroy()})}}matchTiles(e,t){this.tweens.add({targets:[e,t],scale:0,duration:200,onComplete:()=>{this.tiles[e.gridY][e.gridX]=null,this.tiles[t.gridY][t.gridX]=null,this.tileSprites[e.gridY][e.gridX].destroy(),this.tileSprites[t.gridY][t.gridX].destroy(),this.tileSprites[e.gridY][e.gridX]=null,this.tileSprites[t.gridY][t.gridX]=null,this.remainingTiles-=2,this.remainingTiles===0?this.showVictoryMessage():this.checkHasSolution()||this.showNoSolutionMessage()}})}showVictoryMessage(){this.add.text(400,300,"恭喜通关！",{fontSize:"64px",fill:"#fff",stroke:"#000",strokeThickness:6}).setOrigin(.5);const e=this.currentLevel+1;y[this.difficulty].some(s=>s.id===e)?this.add.text(400,400,"下一关",{fontSize:"32px",fill:"#fff",backgroundColor:"#4a90e2",padding:{x:20,y:10}}).setOrigin(.5).setInteractive({useHandCursor:!0}).on("pointerdown",()=>{const s=y[this.difficulty].find(i=>i.id===e);this.scene.restart({difficulty:this.difficulty,levelId:e,levelConfig:s})}):this.time.delayedCall(2e3,()=>{this.scene.start(d.MENU)})}createMap(){this.tiles=[];for(let e=0;e<mapData.length;e++){this.tiles[e]=[];for(let t=0;t<mapData[e].length;t++){if(mapData[e][t]===null){this.tiles[e][t]=null;continue}const s=new k(this,t,e,mapData[e][t]);this.tiles[e][t]=s}}}getTileAt(e,t){return t<0||t>=this.tiles.length||e<0||e>=this.tiles[t].length?null:this.tiles[t][e]}checkHasSolution(){for(let e=0;e<this.tiles.length;e++)for(let t=0;t<this.tiles[e].length;t++)if(this.tiles[e][t])for(let s=e;s<this.tiles.length;s++){const i=s===e?t+1:0;for(let r=i;r<this.tiles[s].length;r++)if(this.tiles[s][r]&&this.tiles[e][t]===this.tiles[s][r]&&this.pathFinder.findPath(t,e,r,s).success)return!0}return!1}showNoSolutionMessage(){this.add.text(400,300,"没有可消除的对子了！",{fontSize:"32px",fill:"#fff",stroke:"#000",strokeThickness:4}).setOrigin(.5),this.add.text(400,380,"重试本关",{fontSize:"24px",fill:"#fff",backgroundColor:"#4a90e2",padding:{x:20,y:10}}).setOrigin(.5).setInteractive({useHandCursor:!0}).on("pointerdown",()=>{this.scene.restart({difficulty:this.difficulty,levelId:this.currentLevel,levelConfig:this.levelConfig})}),this.add.text(400,440,"返回菜单",{fontSize:"24px",fill:"#fff",backgroundColor:"#4a90e2",padding:{x:20,y:10}}).setOrigin(.5).setInteractive({useHandCursor:!0}).on("pointerdown",()=>{this.scene.start(d.MENU)})}}class w extends Phaser.Scene{constructor(){super({key:d.MENU})}create(){this.cameras.main.setBackgroundColor(o.BACKGROUND_COLOR),this.add.text(400,100,o.GAME_TITLE,{fontSize:"64px",fill:"#fff",stroke:"#000",strokeThickness:6}).setOrigin(.5),[{text:"简单",value:u.EASY},{text:"中等",value:u.MEDIUM},{text:"困难",value:u.HARD}].forEach((t,s)=>{const i=this.add.text(400,250+s*80,t.text,{fontSize:"32px",fill:"#fff",backgroundColor:"#4a90e2",padding:{x:30,y:15},stroke:"#000",strokeThickness:4}).setOrigin(.5).setInteractive({useHandCursor:!0}).on("pointerover",()=>{i.setStyle({fill:"#ff0",backgroundColor:"#5aa0f2"}),i.setScale(1.1)}).on("pointerout",()=>{i.setStyle({fill:"#fff",backgroundColor:"#4a90e2"}),i.setScale(1)}).on("pointerdown",()=>this.startGame(t.value,1))})}startGame(e,t){this.scene.start(d.GAME,{difficulty:e,levelId:t,levelConfig:y[e].find(s=>s.id===t)})}}class _ extends A.Game{constructor(){super({...P,scene:[H,D,w,M]})}}window.onload=()=>{new _};
